/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ui;

import Model.Vehicle;
import Model.VehicleList;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.Locale;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author nikit
 */
public class ViewJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ViewJPanel
     */
    VehicleList vehicleList;
  
    ViewJPanel(VehicleList vehicleList) {
                initComponents();

        this.vehicleList = vehicleList;
//        DisplayVehicle();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tbVehicles = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        btnFilterbyMake = new javax.swing.JButton();
        btnFilterYear = new javax.swing.JButton();
        btnFilterCityActionPerformed = new javax.swing.JButton();
        btnFindSerialNo = new javax.swing.JButton();
        btnFilterModel = new javax.swing.JButton();
        txtSerialNo = new javax.swing.JTextField();
        txtFitlerModel = new javax.swing.JTextField();
        txtFilterCity = new javax.swing.JTextField();
        txtMakeFilter = new javax.swing.JTextField();
        txtFilterYear = new javax.swing.JTextField();
        btnMarkAvaliable = new javax.swing.JButton();
        btnUnavil = new javax.swing.JButton();
        btnviewe = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        btnExpMaintActionPerformed = new javax.swing.JButton();
        btnListManufActionPerformed = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tabManuf = new javax.swing.JTable();
        btnSearchCarWithSeats = new javax.swing.JButton();
        txtMinSeat = new javax.swing.JLabel();
        txtMinSeat1 = new javax.swing.JTextField();
        txtMaxSeat = new javax.swing.JLabel();
        txtMaxSeat1 = new javax.swing.JTextField();
        btnAvilCarActionPerformed = new javax.swing.JButton();
        labAvaliable = new javax.swing.JLabel();
        labUnavaliable = new javax.swing.JLabel();
        labFirstAvilCar = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(204, 204, 255));

        tbVehicles.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        tbVehicles.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Make", "Model", "Year of Manufacturing", "Max Seats", "Serial No.", "Maintainance Date", "City", "Updated Time", "License Plate", "Available"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Boolean.class
            };
            boolean[] canEdit = new boolean [] {
                true, true, true, true, true, true, true, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tbVehicles);

        btnFilterbyMake.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnFilterbyMake.setText("Filter by Make");
        btnFilterbyMake.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFilterbyMakeActionPerformed(evt);
            }
        });

        btnFilterYear.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnFilterYear.setText("Filter by Year");
        btnFilterYear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFilterYearActionPerformed(evt);
            }
        });

        btnFilterCityActionPerformed.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnFilterCityActionPerformed.setText("Filter by City");
        btnFilterCityActionPerformed.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFilterCityActionPerformedActionPerformed(evt);
            }
        });

        btnFindSerialNo.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnFindSerialNo.setText("Find by Serial NO.");
        btnFindSerialNo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFindSerialNoActionPerformed(evt);
            }
        });

        btnFilterModel.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnFilterModel.setText("Filter by Model");
        btnFilterModel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFilterModelActionPerformed(evt);
            }
        });

        txtMakeFilter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtMakeFilterActionPerformed(evt);
            }
        });

        txtFilterYear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtFilterYearActionPerformed(evt);
            }
        });

        btnMarkAvaliable.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnMarkAvaliable.setText("Mark Available");
        btnMarkAvaliable.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMarkAvaliableActionPerformed(evt);
            }
        });

        btnUnavil.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnUnavil.setText("Mark Unavailable (Book)");
        btnUnavil.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUnavilActionPerformed(evt);
            }
        });

        btnviewe.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnviewe.setText("Update");
        btnviewe.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnvieweActionPerformed(evt);
            }
        });

        btnDelete.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        btnExpMaintActionPerformed.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnExpMaintActionPerformed.setText("Expired Maintenance Cars");
        btnExpMaintActionPerformed.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExpMaintActionPerformedActionPerformed(evt);
            }
        });

        btnListManufActionPerformed.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnListManufActionPerformed.setText("List all car manufactered");
        btnListManufActionPerformed.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnListManufActionPerformedActionPerformed(evt);
            }
        });

        tabManuf.setBackground(new java.awt.Color(255, 204, 204));
        tabManuf.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        tabManuf.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Manufacturers"
            }
        ));
        jScrollPane2.setViewportView(tabManuf);
        if (tabManuf.getColumnModel().getColumnCount() > 0) {
            tabManuf.getColumnModel().getColumn(0).setResizable(false);
        }

        btnSearchCarWithSeats.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnSearchCarWithSeats.setText("Search Car with Seats ");
        btnSearchCarWithSeats.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchCarWithSeatsActionPerformed(evt);
            }
        });

        txtMinSeat.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        txtMinSeat.setText("Min");

        txtMaxSeat.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        txtMaxSeat.setText("Max");

        txtMaxSeat1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtMaxSeat1ActionPerformed(evt);
            }
        });

        btnAvilCarActionPerformed.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnAvilCarActionPerformed.setText("Find First Available Car");
        btnAvilCarActionPerformed.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAvilCarActionPerformedActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(135, 135, 135)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1250, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(btnFilterYear, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(btnFilterCityActionPerformed, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addComponent(btnFilterbyMake))
                                .addGap(35, 35, 35)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtFilterYear, javax.swing.GroupLayout.DEFAULT_SIZE, 357, Short.MAX_VALUE)
                                    .addComponent(txtFilterCity)
                                    .addComponent(txtMakeFilter))
                                .addGap(69, 69, 69)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(btnFindSerialNo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(btnFilterModel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(btnExpMaintActionPerformed, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(16, 16, 16)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtSerialNo, javax.swing.GroupLayout.DEFAULT_SIZE, 332, Short.MAX_VALUE)
                                    .addComponent(txtFitlerModel)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnListManufActionPerformed)
                                .addGap(28, 28, 28)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(59, 59, 59)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(103, 103, 103)
                                        .addComponent(btnSearchCarWithSeats))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(txtMinSeat, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(txtMinSeat1, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addComponent(btnAvilCarActionPerformed, javax.swing.GroupLayout.PREFERRED_SIZE, 249, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(41, 41, 41)
                                        .addComponent(txtMaxSeat)
                                        .addGap(18, 18, 18)
                                        .addComponent(txtMaxSeat1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(35, 35, 35)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 390, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(60, 60, 60)
                                .addComponent(labAvaliable, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnMarkAvaliable, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(116, 116, 116)
                                .addComponent(btnUnavil)
                                .addGap(44, 44, 44)
                                .addComponent(btnviewe)
                                .addGap(47, 47, 47)
                                .addComponent(btnDelete))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(164, 164, 164)
                                .addComponent(labUnavaliable, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(546, 546, 546)
                        .addComponent(labFirstAvilCar, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(115, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 308, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(btnMarkAvaliable, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(labAvaliable, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(btnviewe)
                                .addComponent(btnDelete))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(327, 327, 327)
                        .addComponent(btnUnavil)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(labUnavaliable, javax.swing.GroupLayout.PREFERRED_SIZE, 13, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnFindSerialNo)
                        .addComponent(txtSerialNo, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnFilterbyMake)
                        .addComponent(txtMakeFilter, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(39, 39, 39)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnFilterYear)
                    .addComponent(txtFilterYear)
                    .addComponent(btnFilterModel)
                    .addComponent(txtFitlerModel, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(41, 41, 41)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnFilterCityActionPerformed)
                    .addComponent(txtFilterCity, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnExpMaintActionPerformed))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(180, 180, 180)
                        .addComponent(btnListManufActionPerformed))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(133, 133, 133)
                                .addComponent(btnSearchCarWithSeats)
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txtMinSeat)
                                    .addComponent(txtMinSeat1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtMaxSeat)
                                    .addComponent(txtMaxSeat1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(95, 95, 95))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                        .addComponent(btnAvilCarActionPerformed)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(labFirstAvilCar, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(120, 120, 120))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnFilterbyMakeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFilterbyMakeActionPerformed
        // TODO add your handling code here:
        ArrayList<Vehicle> list = vehicleList.filterByMade(txtMakeFilter.getText());
        DisplayVehicle(list);
    }//GEN-LAST:event_btnFilterbyMakeActionPerformed

    private void btnFilterYearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFilterYearActionPerformed
        // TODO add your handling code here:
        ArrayList<Vehicle> list = vehicleList.filterByManufYear(Integer.valueOf(txtFilterYear.getText()));
        DisplayVehicle(list);
    }//GEN-LAST:event_btnFilterYearActionPerformed

    private void btnFindSerialNoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFindSerialNoActionPerformed
        // TODO add your handling code here:
        if (txtSerialNo.getText().length() != 10) {
            JOptionPane.showMessageDialog(this, "Enter proper 10 digit Serial Number");
            return;
        }

        ArrayList<Vehicle> list = vehicleList.filterBySerialNo(txtSerialNo.getText());
        DisplayVehicle(list);
    }//GEN-LAST:event_btnFindSerialNoActionPerformed

    private void btnFilterModelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFilterModelActionPerformed
        // TODO add your handling code here:
        ArrayList<Vehicle> list = vehicleList.filterByModel(txtFitlerModel.getText());
        DisplayVehicle(list);
    }//GEN-LAST:event_btnFilterModelActionPerformed

    private void btnExpMaintActionPerformedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExpMaintActionPerformedActionPerformed
        // TODO add your handling code here:
        ArrayList<Vehicle> list = vehicleList.expiredMaintainance();
        DisplayVehicle(list);
    }//GEN-LAST:event_btnExpMaintActionPerformedActionPerformed

    private void btnSearchCarWithSeatsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchCarWithSeatsActionPerformed
        // TODO add your handling code here:
        int min = Integer.parseInt(txtMinSeat1.getText());
        int max = Integer.parseInt(txtMaxSeat1.getText());
        System.out.println("vehicleList.getMinMaxSeats(min, max)"+min+" " +max);

        ArrayList<Vehicle> list = vehicleList.getMinMaxSeats(min, max);
        DisplayVehicle(list);
    }//GEN-LAST:event_btnSearchCarWithSeatsActionPerformed

    private void txtMaxSeat1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtMaxSeat1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtMaxSeat1ActionPerformed

    private void btnAvilCarActionPerformedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAvilCarActionPerformedActionPerformed
        // TODO add your handling code here:
        ArrayList<Vehicle> list = vehicleList.getFirstAvaliableCar();
        DisplayVehicle(list);
        labFirstAvilCar.setText(list.get(0).getModel() + " " + list.get(0).getLicencePlate());
        //labFirstAvilCar.setText(list.getModel() + " " + list.getLicencePlate());
    }//GEN-LAST:event_btnAvilCarActionPerformedActionPerformed

    private void btnListManufActionPerformedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnListManufActionPerformedActionPerformed
        // TODO add your handling code here:
        DefaultTableModel tab = (DefaultTableModel) tabManuf.getModel();
        tab.setRowCount(0);
        ArrayList<String> list = vehicleList.getManuf();

        for (String v : list) {

            Object[] row = new Object[10];
            row[0] = v;
            tab.addRow(row);
        }
    }//GEN-LAST:event_btnListManufActionPerformedActionPerformed

    private void btnFilterCityActionPerformedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFilterCityActionPerformedActionPerformed
        // TODO add your handling code here:
        ArrayList<Vehicle> list = vehicleList.filterByCity(txtFilterCity.getText());
        DisplayVehicle(list);
    }//GEN-LAST:event_btnFilterCityActionPerformedActionPerformed

    private void btnMarkAvaliableActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMarkAvaliableActionPerformed
        // TODO add your handling code here:
        int selectedRow = tbVehicles.getSelectedRow();
        DefaultTableModel model = (DefaultTableModel) tbVehicles.getModel();

        if (selectedRow < 0 || model.getValueAt(selectedRow, 9).equals(true)) {
            JOptionPane.showMessageDialog(this, "Please Select a proper row to mark Unavaliable.");
            return;}
    }//GEN-LAST:event_btnMarkAvaliableActionPerformed

    private void btnUnavilActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUnavilActionPerformed
        // TODO add your handling code here:
        int selectedRow = tbVehicles.getSelectedRow();
        DefaultTableModel model = (DefaultTableModel) tbVehicles.getModel();

        if (selectedRow < 0 || model.getValueAt(selectedRow, 9).equals(false)) {
            JOptionPane.showMessageDialog(this, "Please Select a proper row to mark Unavaliable.");
            return;
        }

        vehicleList.markUnaviable(model.getValueAt(selectedRow, 8).toString());
        DisplayVehicle();
        JOptionPane.showMessageDialog(this, "Vehicle marked as Unavaliable!");
    }//GEN-LAST:event_btnUnavilActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // TODO add your handling code here:
        int selectedRow = tbVehicles.getSelectedRow();
        
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(this, "Please Select a row to delete.");
            return;
        }
        DefaultTableModel model = (DefaultTableModel) tbVehicles.getModel();
        System.out.println("val "+model.getValueAt(selectedRow, 8).toString());
        vehicleList.deleteByLicencePlate(model.getValueAt(selectedRow, 8).toString());
        DisplayVehicle();
        JOptionPane.showMessageDialog(this, "Record Deleted!");
        long lastTime = System.currentTimeMillis();
        Date dateTime = new Date(lastTime);
        jLabel2.setText("Last Updated time:" + dateTime);
     
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void txtMakeFilterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtMakeFilterActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtMakeFilterActionPerformed

    private void txtFilterYearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtFilterYearActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtFilterYearActionPerformed

    private void btnvieweActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnvieweActionPerformed
        // TODO add your handling code here:
        int selectedRow = tbVehicles.getSelectedRow();
if (selectedRow < 0) {
JOptionPane.showMessageDialog(this, "Please Select a row to update.");
return;
}
DefaultTableModel model = (DefaultTableModel) tbVehicles.getModel();
Object[] row = null;
row = new Object[10];
for (int j = 0; j < model.getColumnCount(); j++) {
row[j] = model.getValueAt(selectedRow, j);

}
DateFormat dateFormat = new SimpleDateFormat(
"EEE MMM dd HH:mm:ss zzz yyyy", Locale.US);

SimpleDateFormat f = new SimpleDateFormat("EEE MMM dd HH:mm:ss zzz yyyy");
long milliseconds = 0;



try {
dateFormat.format(new Date());
dateFormat.parse(row[7].toString());



Date d = f.parse(row[7].toString());
milliseconds = d.getTime();



} catch (ParseException ex) {
Logger.getLogger(ViewJPanel.class.getName()).log(Level.SEVERE, null, ex);
}
vehicleList.deleteByLicencePlate(row[8].toString());



vehicleList.addVehicle(row[0].toString(),
row[1].toString(),
Integer.parseInt(row[2].toString()),
Integer.parseInt(row[3].toString()),
row[4].toString(),
row[6].toString(),
row[5].toString(),
System.currentTimeMillis(),
Boolean.getBoolean(row[9].toString()),
row[8].toString());



DisplayVehicle();
JOptionPane.showMessageDialog(this, "Record Updated!");
long lastTime = System.currentTimeMillis();
Date dateTime = new Date(lastTime);
jLabel2.setText("Last Updated time:" + dateTime);
    }//GEN-LAST:event_btnvieweActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAvilCarActionPerformed;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnExpMaintActionPerformed;
    private javax.swing.JButton btnFilterCityActionPerformed;
    private javax.swing.JButton btnFilterModel;
    private javax.swing.JButton btnFilterYear;
    private javax.swing.JButton btnFilterbyMake;
    private javax.swing.JButton btnFindSerialNo;
    private javax.swing.JButton btnListManufActionPerformed;
    private javax.swing.JButton btnMarkAvaliable;
    private javax.swing.JButton btnSearchCarWithSeats;
    private javax.swing.JButton btnUnavil;
    private javax.swing.JButton btnviewe;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel labAvaliable;
    private javax.swing.JLabel labFirstAvilCar;
    private javax.swing.JLabel labUnavaliable;
    private javax.swing.JTable tabManuf;
    private javax.swing.JTable tbVehicles;
    private javax.swing.JTextField txtFilterCity;
    private javax.swing.JTextField txtFilterYear;
    private javax.swing.JTextField txtFitlerModel;
    private javax.swing.JTextField txtMakeFilter;
    private javax.swing.JLabel txtMaxSeat;
    private javax.swing.JTextField txtMaxSeat1;
    private javax.swing.JLabel txtMinSeat;
    private javax.swing.JTextField txtMinSeat1;
    private javax.swing.JTextField txtSerialNo;
    // End of variables declaration//GEN-END:variables

   private void DisplayVehicle(ArrayList<Vehicle> list) {
        DefaultTableModel model = (DefaultTableModel) tbVehicles.getModel();
        int avail = 0, unavil = 0;
        model.setRowCount(0);
        SimpleDateFormat formatter = new SimpleDateFormat("yyyy-MM-dd 'at' HH:mm:ss z");

        for (Vehicle v : list) {
       // model.setRowCount(0);
        //SimpleDateFormat formatter = new SimpleDateFormat("yyyy-MM-dd 'at' HH:mm:ss z");

        //for (Vehicle v : list) {

            Date date = new Date(System.currentTimeMillis());

            if (v.isIsAvaliable()) {
                avail++;
            } else {
                unavil++;
            }

            Object[] row = new Object[10];
            row[0] = v.getMake();
            row[1] = v.getModel();
            row[2] = v.getYearOfMan();
            row[3] = v.getMaxSeats();
            row[4] = v.getSerialNo();
            row[5] = v.getMaintenanceDate();
            row[6] = v.getCity();
            row[7] = date.toString();
            row[8] = v.getLicencePlate();
            row[9] = v.isIsAvaliable();

            model.addRow(row);
        }

        //last time fleet catlog was updated.
        long time = vehicleList.getLastUpdateTime();
        Date dateTime = new Date(time);
        txtMinSeat.setText("Last Updated time:" + dateTime.toString());

        //Update avaliable and unavaliable cars
        labAvaliable.setText("Avaliable (" + avail + ")");
        labUnavaliable.setText("Unavaliable (" + unavil + ")");
    }

    private void DisplayVehicle() {
        DefaultTableModel model = (DefaultTableModel) tbVehicles.getModel();
        int avail = 0, unavil = 0;
        model.setRowCount(0);
        SimpleDateFormat formatter = new SimpleDateFormat("yyyy-MM-dd 'at' HH:mm:ss z");

        for (Vehicle v : vehicleList.getVehicleList()) {
        model.setRowCount(0);
            //System.out.println("abcd"+v.getMake());
        //SimpleDateFormat formatter = new SimpleDateFormat("yyyy-MM-dd 'at' HH:mm:ss z");

        //for (Vehicle v : vehicleList.getVehicleList()) {

            Date date = new Date(v.getUpdateTime());

            if (v.isIsAvaliable()) {
                avail++;
            } else {
                unavil++;
            }

            Object[] row = new Object[10];
            row[0] = v.getMake();
            row[1] = v.getModel();
            row[2] = v.getYearOfMan();
            row[3] = v.getMaxSeats();
            row[4] = v.getSerialNo();
            row[5] = v.getMaintenanceDate();
            row[6] = v.getCity();
            row[7] = date.toString();
            row[8] = v.getLicencePlate();
            row[9] = v.isIsAvaliable();

            model.addRow(row);
        }

        //last time fleet catlog was updated.
        long time = vehicleList.getLastUpdateTime();
        Date dateTime = new Date(time);
        txtMinSeat.setText("Last Updated time:" + dateTime.toString());

        //Update avaliable and unavaliable cars
        labAvaliable.setText("Avaliable (" + avail + ")");
        labUnavaliable.setText("Unavaliable (" + unavil + ")");
    }
}